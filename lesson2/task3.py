"""
Напишите функцию для валидации ИНН (идентификационного номера
налогоплательщика), которая принимает в качестве аргумента строку, содержащую
ИНН или просто набор цифр, похожий на ИНН.

Функция возвращает True в случае, если ИНН прошёл проверку, и False, если проверка
не пройдена.
Для удобства лучше разбить код на несколько взаимосвязанных функций.
ТЗ составлено с использованием материалов Kholenkov.ru.
ИНН организации состоит из 10 цифр:
● 1-4-я цифры:
○ для российской организации — код налогового органа, который присвоил
ИНН;
○ для иностранной организации — индекс, определяемый Федеральной
налоговой службой;

● 5-9-я цифры:
○ для российской организации — порядковый номер записи о лице в
территориальном разделе Единого государственного реестра
налогоплательщиков налогового органа, который присвоил ИНН;
○ для иностранной организации — код иностранной организации (КИО)
согласно Справочнику «Коды иностранных организаций»;

● 10-я цифра — контрольное число.
ИНН физического лица (индивидуального предпринимателя) состоит из 12 цифр:
● 1-4-я цифры — код налогового органа, который присвоил ИНН;
● 5-10-я цифры — порядковый номер записи о лице в территориальном разделе
Единого государственного реестра налогоплательщиков налогового органа,
который присвоил ИНН;
● 11-12-я цифры — контрольное число.
Алгоритм проверки ИНН организации (10 знаков)
1. Вычисляется контрольная сумма со следующими весовыми коэффициентами:
(2, 4, 10, 3, 5, 9, 4, 6, 8, 0), т. е. необходимо вычислить сумму произведений
цифр ИНН (с 1-й по 9-ю) на следующие коэффициенты — [2, 4, 10, 3, 5, 9, 4, 6,
8]:
2 * inn[0] + 4 * inn[1] + .... + 8 * inn[9]
2. Вычисляется контрольное число как остаток от деления контрольной суммы на
11 (оператор деления по модулю %).
3. Контрольное число проверяется с десятым знаком ИНН. В случае их равенства
ИНН считается правильным.
Алгоритм проверки ИНН физического лица и ИП (12 знаков)
1. Необходимо вычислить сумму произведений цифр ИНН (с 1-й по 10-ю) на
следующие коэффициенты — [7, 2, 4, 10, 3, 5, 9, 4, 6, 8]:

7 * inn[0] + 2 * inn[1] + .... + 8 * inn[9]
2. Вычисляется первое контрольное число как остаток от деления контрольной
суммы на 11.
3. Необходимо вычислить сумму произведений цифр ИНН (с 1-й по 11-ю) на
следующие коэффициенты — [3, 7, 2, 4, 10, 3, 5, 9, 4, 6, 8]:
3 * inn[0] + 7 * inn[1] + .... + 8 * inn[10]
4. Вычисляется второе контрольное число как остаток от деления контрольной
суммы на 11.
5. Первое контрольное число проверяется с одиннадцатым знаком ИНН, а второе
контрольное число проверяется с двенадцатым знаком ИНН. В случае их
равенства ИНН считается правильным.
"""


def validate_inn(inn):
    def calculate_control_number1(inn):
        weights = [2, 4, 10, 3, 5, 9, 4, 6, 8]
        control_sum = sum(int(inn[i]) * weights[i] for i in range(9))
        control_number = control_sum % 11 if control_sum % 11 < 10 else 0
        return control_number

    def calculate_control_number2(inn):
        weights = [7, 2, 4, 10, 3, 5, 9, 4, 6, 8]
        control_sum = sum(int(inn[i]) * weights[i] for i in range(10))
        control_number = control_sum % 11 if control_sum % 11 < 10 else 0
        return control_number

    if len(inn) == 10:
        control_number1 = calculate_control_number1(inn)
        return control_number1 == int(inn[9])
    elif len(inn) == 12:
        control_number1 = calculate_control_number1(inn)
        control_number2 = calculate_control_number2(inn)
        return control_number1 == int(inn[10]) and control_number2 == int(inn[11])

    return False


# Пример использования функции
inn1 = "9725005034"
is_valid1 = validate_inn(inn1)
print(f"ИНН {inn1} валиден? {is_valid1}")

inn2 = "772772830282"
is_valid2 = validate_inn(inn2)
print(f"ИНН {inn2} валиден? {is_valid2}")
